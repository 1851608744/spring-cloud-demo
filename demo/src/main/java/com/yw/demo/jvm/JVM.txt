JVM:
    1.类的加载
    类的加载是将类的.class文件中的二进制数据读入到内存中，将其放在运行时数据区的方法区内，
    然后在堆区创建一个Java.lang.Class对象，用来封装类在方法区内的数据结构。
    类的加载的最终产品时位于堆区中的Class对象，Class对象封装了类在方法区内的数据结构，
    并且向java程序员提供了方法区内的数据结构的接口。
    2.类的生命周期
    （加载 - 验证 - 准备 - 解析 - 初始化）类的加载过程
        -> 使用 - 卸载       （类的生命周期）
    加载：查找并加载类的二进制数据，在java堆中也创建一个java.lang.Class类的对象
    连接：
        验证：文件格式、元数据、字节码、符号引用验证
        准备：为类的静态变量分配内存，并将其初始化为默认值
        解析：把类中的符号引用转换为直接引用
    初始化：为类的静态变量赋予正确的初始值
    使用：new出对象程序中使用
    卸载：执行垃圾回收
    3.类加载机制
    全盘负责：当一个类加载器负责加载某个Class时，该Class所依赖的和引用的其他Class也将由该类加载器负责载入，除非显示使用另外一个类加载器来载入
    父类委托：先让父类加载器试图加载该类，只有在父类加载器无法加载该类时才尝试从自己的类路径中加载该类
    缓存机制：缓存机制将会保证所有加载过的Class都会被缓存，当程序中需要使用某个Class时，类加载器先从缓存区寻找该Class，只有缓存区不存在，系统才会读取该类对应的二进制数据，并将其转换成Class对象，存入缓存区。这就是为什么修改了Class后，必须重启JVM，程序的修改才会生效
    4.JVM内存结构
    Java堆（Heap）：是Java虚拟机所管理的内存中最大的一块。Java堆是被所有线程共享的一块内存区域，在虚拟机启动时创建。此内存区域的唯一目的就是存放对象实例，几乎所有的对象实例都在这里分配内存。
    方法区（Method Area）：方法区（Method Area）与Java堆一样，是各个线程共享的内存区域，它用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。
    程序计数器（Program Counter Register）：程序计数器（Program Counter Register）是一块较小的内存空间，它的作用可以看做是当前线程所执行的字节码的行号指示器。
    JVM栈（JVM Stacks）：与程序计数器一样，Java虚拟机栈（Java Virtual Machine Stacks）也是线程私有的，它的生命周期与线程相同。虚拟机栈描述的是Java方法执行的内存模型：每个方法被执行的时候都会同时创建一个栈帧（Stack Frame）用于存储局部变量表、操作栈、动态链接、方法出口等信息。每一个方法被调用直至执行完成的过程，就对应着一个栈帧在虚拟机栈中从入栈到出栈的过程。
    本地方法栈（Native Method Stacks）：本地方法栈（Native Method Stacks）与虚拟机栈所发挥的作用是非常相似的，其区别不过是虚拟机栈为虚拟机执行Java方法（也就是字节码）服务，而本地方法栈则是为虚拟机使用到的Native方法服务。
    5.GC 垃圾回收
        对象存货判断：
        引用技术：每个对象有一个引用计数属性，新增一个引用时计数加1，引用释放时计数减1，计数为0时可以回收。此方法简单，无法解决对象相互循环引用的问题。
        可达性分析：从GC Roots开始向下搜索，搜索所走过的路径称为引用链。当一个对象到GC Roots没有任何引用链相连时，则证明此对象是不可用的，不可达对象。
        GC算法：
        标记-清除算法
        复制算法
        标记-压缩算法
        分代收集算法
        垃圾回收器：
        Serial收集器：串行收集器是最古老，最稳定以及效率高的收集器，可能会产生较长的停顿，只使用一个线程去回收。
        ParNew收集器：ParNew收集器其实就是Serial收集器的多线程版本。
        Parallel收集器：Parallel Scavenge收集器类似ParNew收集器，Parallel收集器更关注系统的吞吐量。
        Parallel Old 收集器：Parallel Old是Parallel Scavenge收集器的老年代版本，使用多线程和“标记－整理”算法
        CMS收集器：CMS（Concurrent Mark Sweep）收集器是一种以获取最短回收停顿时间为目标的收集器。
        G1收集器：G1 (Garbage-First)是一款面向服务器的垃圾收集器,主要针对配备多颗处理器及大容量内存的机器. 以极高概率满足GC停顿时间要求的同时,还具备高吞吐量性能特征
